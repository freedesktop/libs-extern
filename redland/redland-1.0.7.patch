--- misc/redland-1.0.7/LICENSE.txt	Wed May  2 07:45:42 2007
+++ misc/build/redland-1.0.7/LICENSE.txt	Mon Jun 16 15:55:51 2008
@@ -77,3 +77,15 @@
   10. NOTICE
   11. http://purl.org/net/dajobe/
   12. http://www.bristol.ac.uk/
+
+
+LGPL Disclaimer
+
+For the avoidance of doubt, except that if any license choice other 
+than GPL or LGPL is available it will apply instead, Sun elects to 
+use only the Lesser General Public License version 2.1 (LGPLv2) at 
+this time for any software where a choice of LGPL license versions 
+is made available with the language indicating that LGPLv2.1 or any 
+later version may be used, or where a choice of which version of the 
+LGPL is applied is otherwise unspecified.
+
--- misc/redland-1.0.7/librdf/makefile.mk	2008-12-26 17:24:00.000000000 +0100
+++ misc/build/redland-1.0.7/librdf/makefile.mk	2008-12-26 17:20:46.000000000 +0100
@@ -1 +1,124 @@
-dummy
+#*************************************************************************
+#
+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+#
+# Copyright 2008 by Sun Microsystems, Inc.
+#
+# OpenOffice.org - a multi-platform office productivity suite
+#
+# $RCSfile: redland-1.0.7.patch,v $
+#
+# $Revision: 1.2.6.2 $
+#
+# This file is part of OpenOffice.org.
+#
+# OpenOffice.org is free software: you can redistribute it and/or modify
+# it under the terms of the GNU Lesser General Public License version 3
+# only, as published by the Free Software Foundation.
+#
+# OpenOffice.org is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU Lesser General Public License version 3 for more details
+# (a copy is included in the LICENSE file that accompanied this code).
+#
+# You should have received a copy of the GNU Lesser General Public License
+# version 3 along with OpenOffice.org.  If not, see
+# <http://www.openoffice.org/license.html>
+# for a copy of the LGPLv3 License.
+#
+#*************************************************************************
+
+PRJ=..$/..$/..$/..$/..
+
+PRJNAME=redland
+TARGET=librdf
+LIBTARGET=NO
+
+EXTERNAL_WARNINGS_NOT_ERRORS=TRUE
+
+
+# --- Settings -----------------------------------------------------
+
+.INCLUDE :  settings.mk
+
+.IF "$(GUI)"=="OS2"
+CDEFS+=-DLIBRDF_INTERNAL -DHAVE_CONFIG_H -DNDEBUG
+.ELSE
+CDEFS+=-DLIBRDF_INTERNAL -DWIN32 -DNDEBUG -D_WINDOWS -D_USRDLL -DWIN32_EXPORTS
+.ENDIF
+
+# --- Files --------------------------------------------------------
+
+SLOFILES =	\
+   $(SLO)$/rdf_concepts.obj \
+   $(SLO)$/rdf_digest.obj \
+   $(SLO)$/rdf_digest_md5.obj \
+   $(SLO)$/rdf_digest_openssl.obj \
+   $(SLO)$/rdf_digest_sha1.obj \
+   $(SLO)$/rdf_files.obj \
+   $(SLO)$/rdf_hash.obj \
+   $(SLO)$/rdf_hash_cursor.obj \
+   $(SLO)$/rdf_hash_memory.obj \
+   $(SLO)$/rdf_heuristics.obj \
+   $(SLO)$/rdf_init.obj \
+   $(SLO)$/rdf_iterator.obj \
+   $(SLO)$/rdf_list.obj \
+   $(SLO)$/rdf_log.obj \
+   $(SLO)$/rdf_model.obj \
+   $(SLO)$/rdf_model_storage.obj \
+   $(SLO)$/rdf_node.obj \
+   $(SLO)$/rdf_parser.obj \
+   $(SLO)$/rdf_parser_raptor.obj \
+   $(SLO)$/rdf_query.obj \
+   $(SLO)$/rdf_query_rasqal.obj \
+   $(SLO)$/rdf_query_results.obj \
+   $(SLO)$/rdf_query_triples.obj \
+   $(SLO)$/rdf_serializer.obj \
+   $(SLO)$/rdf_serializer_raptor.obj \
+   $(SLO)$/rdf_statement.obj \
+   $(SLO)$/rdf_storage.obj \
+   $(SLO)$/rdf_storage_file.obj \
+   $(SLO)$/rdf_storage_list.obj \
+   $(SLO)$/rdf_storage_hashes.obj \
+   $(SLO)$/rdf_stream.obj \
+   $(SLO)$/rdf_uri.obj \
+   $(SLO)$/rdf_utf8.obj \
+
+
+#   $(SLO)$/rdf_hash_bdb.obj \
+#   $(SLO)$/rdf_storage_mysql.obj \
+#   $(SLO)$/rdf_storage_sqlite.obj \
+
+
+SHL1DEPN=   makefile.mk
+SHL1OBJS=   $(SLOFILES)
+
+#SHL1TARGET=	$(TARGET)$(DLLPOSTFIX)
+SHL1TARGET=	$(TARGET)
+SHL1IMPLIB= $(TARGET)
+SHL1USE_EXPORTS=name
+
+#SHL1VERSIONMAP=../service/exports.map
+.IF "$(GUI)"=="OS2"
+SHL1VERSIONMAP=$(PRJ)$/redland$/redland2.map
+.ENDIF
+SHL1DEF=$(MISC)$/$(SHL1TARGET).def
+DEF1NAME=$(SHL1TARGET)
+
+SHL1STDLIBS= \
+    $(OPENSSLLIB) \
+    $(PRJ)$/$(INPATH)$/lib$/libraptor.lib \
+    $(PRJ)$/$(INPATH)$/lib$/librasqal.lib \
+
+.IF "$(GUI)"=="OS2"
+SHL1STDLIBS+= pthread.lib
+.ENDIF
+
+#$(LIBXML2LIB) \
+#    $(XSLTLIB) \
+
+# --- Targets ------------------------------------------------------
+
+.INCLUDE :  target.mk
+
--- misc/redland-1.0.7/librdf/rdf_digest.c	Wed Dec  5 18:25:18 2007
+++ misc/build/redland-1.0.7/librdf/rdf_digest.c	Mon Jun 16 15:55:51 2008
@@ -250,6 +250,8 @@
 void
 librdf_free_digest(librdf_digest *digest) 
 {
+  if(!digest)
+    return;
   if(digest->context)
     LIBRDF_FREE(digest_context, digest->context);
   if(digest->digest)
--- misc/redland-1.0.7/librdf/rdf_hash.c	Thu Dec 20 22:39:42 2007
+++ misc/build/redland-1.0.7/librdf/rdf_hash.c	Mon Jun 16 15:55:51 2008
@@ -490,6 +490,8 @@
 void
 librdf_free_hash(librdf_hash* hash) 
 {
+  if(!hash)
+    return;
   if(hash->context) {
     if(hash->is_open)
       librdf_hash_close(hash);
--- misc/redland-1.0.7/librdf/rdf_init.c	Tue Nov  6 16:26:18 2007
+++ misc/build/redland-1.0.7/librdf/rdf_init.c	Mon Jun 16 15:55:51 2008
@@ -178,6 +178,9 @@
 void
 librdf_free_world(librdf_world *world)
 {
+  if(!world)
+    return;
+
   /* NOTE: raptor is always initialised as a parser and may
    * be also used as a serializer, but it is NOT finished
    * in the serializer_raptor registration.  Therefore, always
--- misc/redland-1.0.7/librdf/rdf_list.c	Thu Dec 20 22:39:42 2007
+++ misc/build/redland-1.0.7/librdf/rdf_list.c	Mon Jun 16 15:55:51 2008
@@ -108,6 +108,8 @@
 void
 librdf_free_list(librdf_list* list) 
 {
+  if(!list)
+    return;
   LIBRDF_ASSERT_RETURN(list->iterator_count,
                        "Iterators were active on freeing list", );
 
--- misc/redland-1.0.7/librdf/rdf_model.c	Tue Oct 23 16:55:06 2007
+++ misc/build/redland-1.0.7/librdf/rdf_model.c	Mon Jun 16 15:55:51 2008
@@ -393,7 +393,8 @@
   librdf_iterator* iterator;
   librdf_model* m;
 
-  LIBRDF_ASSERT_OBJECT_POINTER_RETURN(model, librdf_model);
+  if(!model)
+    return;
 
   if(--model->usage)
     return;
--- misc/redland-1.0.7/librdf/rdf_node.c	Thu Dec 20 22:39:42 2007
+++ misc/build/redland-1.0.7/librdf/rdf_node.c	Mon Jun 16 15:55:51 2008
@@ -726,7 +726,8 @@
   librdf_world *world;
 #endif
 
-  LIBRDF_ASSERT_OBJECT_POINTER_RETURN(node, librdf_node);
+  if(!node)
+    return;
 
 #ifdef WITH_THREADS
   world = node->world;
--- misc/redland-1.0.7/librdf/rdf_parser.c	Mon Dec 17 08:19:11 2007
+++ misc/build/redland-1.0.7/librdf/rdf_parser.c	Mon Jun 16 15:55:51 2008
@@ -371,7 +371,8 @@
 void
 librdf_free_parser(librdf_parser *parser) 
 {
-  LIBRDF_ASSERT_OBJECT_POINTER_RETURN(parser, librdf_parser);
+  if(!parser)
+    return;
 
   if(parser->context) {
     if(parser->factory->terminate)
--- misc/redland-1.0.7/librdf/rdf_query.c	Tue Oct 23 16:55:06 2007
+++ misc/build/redland-1.0.7/librdf/rdf_query.c	Mon Jun 16 15:55:51 2008
@@ -388,7 +388,8 @@
 void
 librdf_free_query(librdf_query* query) 
 {
-  LIBRDF_ASSERT_OBJECT_POINTER_RETURN(query, librdf_query);
+  if(!query)
+    return;
 
   if(--query->usage)
     return;
--- misc/redland-1.0.7/librdf/rdf_query_results.c	Fri Oct 26 04:23:36 2007
+++ misc/build/redland-1.0.7/librdf/rdf_query_results.c	Mon Jun 16 15:55:51 2008
@@ -244,7 +244,8 @@
 void
 librdf_free_query_results(librdf_query_results* query_results)
 {
-  LIBRDF_ASSERT_OBJECT_POINTER_RETURN(query_results, librdf_query_results);
+  if(!query_results)
+    return;
 
   if(query_results->query->factory->free_results)
     query_results->query->factory->free_results(query_results);
@@ -636,6 +637,8 @@
 void
 librdf_free_query_results_formatter(librdf_query_results_formatter* formatter) 
 {
+  if(!formatter)
+    return;
   if(formatter->query_results->query->factory->free_results_formatter)
     formatter->query_results->query->factory->free_results_formatter(formatter);
 }
--- misc/redland-1.0.7/librdf/rdf_serializer.c	Tue Oct 23 16:55:06 2007
+++ misc/build/redland-1.0.7/librdf/rdf_serializer.c	Mon Jun 16 15:55:51 2008
@@ -373,7 +373,8 @@
 void
 librdf_free_serializer(librdf_serializer *serializer) 
 {
-  LIBRDF_ASSERT_OBJECT_POINTER_RETURN(serializer, librdf_serializer);
+  if(!serializer)
+    return;
 
   if(serializer->context) {
     if(serializer->factory->terminate)
--- misc/redland-1.0.7/librdf/rdf_statement.c	Tue Nov  6 16:26:18 2007
+++ misc/build/redland-1.0.7/librdf/rdf_statement.c	Mon Jun 16 15:55:51 2008
@@ -255,7 +255,8 @@
   librdf_world *world;
 #endif
 
-  LIBRDF_ASSERT_OBJECT_POINTER_RETURN(statement, librdf_statement);
+  if(!statement)
+    return;
 
 #ifdef WITH_THREADS
   world = statement->world;
--- misc/redland-1.0.7/librdf/rdf_storage.c	Thu Dec 20 22:39:42 2007
+++ misc/build/redland-1.0.7/librdf/rdf_storage.c	Mon Jun 16 15:55:51 2008
@@ -608,7 +608,8 @@
 void
 librdf_free_storage (librdf_storage* storage) 
 {
-  LIBRDF_ASSERT_OBJECT_POINTER_RETURN(storage, librdf_storage);
+  if(!storage)
+    return;
 
   if(--storage->usage)
     return;
--- misc/redland-1.0.7/librdf/rdf_storage_hashes.c	Thu Dec 20 22:39:42 2007
+++ misc/build/redland-1.0.7/librdf/rdf_storage_hashes.c	Mon Jun 16 15:55:51 2008
@@ -1389,6 +1389,66 @@
                                                     LIBRDF_STATEMENT_OBJECT);
 }
 
+
+/* return -1 on failure, 1 if context contains stmt, 0 if not */
+static int
+librdf_storage_hashes_context_contains_statement(librdf_storage* storage,
+    librdf_node* context_node,
+    librdf_statement* statement)
+{
+  librdf_storage_hashes_context* context=(librdf_storage_hashes_context*)storage->context;
+  librdf_hash_datum key, value; /* on stack - not allocated */
+  size_t size;
+  int status;
+
+  if(context->contexts_index < 0) {
+    librdf_log(storage->world, 0, LIBRDF_LOG_WARN, LIBRDF_FROM_STORAGE, NULL,
+               "Storage was created without context support");
+    return -1;
+  }
+
+  /* ENCODE KEY */
+  size=librdf_node_encode(context_node, NULL, 0);
+  if (!size)
+    return -1;
+  key.data=(char*)LIBRDF_MALLOC(cstring, size);
+  if (!key.data)
+    return -1;
+  key.size=librdf_node_encode(context_node,
+                               (unsigned char*)key.data, size);
+  if (!key.size) {
+    LIBRDF_FREE(data, key.data);
+    return -1;
+  }
+
+  /* ENCODE VALUE */
+  size=librdf_statement_encode(statement, NULL, 0);
+  if (!size) {
+    LIBRDF_FREE(data, key.data);
+    return -1;
+  }
+  value.data=(char*)LIBRDF_MALLOC(cstring, size);
+  if (!value.data) {
+    LIBRDF_FREE(data, key.data);
+    return -1;
+  }
+  value.size=librdf_statement_encode(statement, (unsigned char*)value.data, size);
+  if (!value.size) {
+    LIBRDF_FREE(data, value.data);
+    LIBRDF_FREE(data, key.data);
+    return -1;
+  }
+
+  status=librdf_hash_exists(context->hashes[context->contexts_index], &key, &value);
+  LIBRDF_FREE(data, value.data);
+  LIBRDF_FREE(data, key.data);
+
+  /* DO NOT free statement, ownership was not passed in */
+  return status;
+}
+
+
+
 /**
  * librdf_storage_hashes_context_add_statement:
  * @storage: #librdf_storage object
@@ -1414,7 +1474,15 @@
                "Storage was created without context support");
     return 1;
   }
-  
+
+  /* Do not add duplicate statements */
+  status=librdf_storage_hashes_context_contains_statement(storage, context_node, statement);
+  if(status)
+    if(status < 0)
+      return 1;
+    else
+      return 0;
+
   if(librdf_storage_hashes_add_remove_statement(storage, 
                                                 statement, context_node, 1))
     return 1;
@@ -1595,7 +1663,6 @@
 {
   librdf_storage_hashes_context_serialise_stream_context* scontext=(librdf_storage_hashes_context_serialise_stream_context*)context;
   librdf_hash_datum* v;
-  librdf_node** cnp=NULL;
 
   switch(flags) {
     case LIBRDF_ITERATOR_GET_METHOD_GET_OBJECT:
@@ -1608,20 +1675,14 @@
           return scontext->context_node;
       }
 
-      /* current stuff is out of date - get new cached answers */
-      if(scontext->index_contexts) {
-        if(scontext->context_node)
-          librdf_free_node(scontext->context_node);
-        scontext->context_node=NULL;
-        cnp=&scontext->context_node;
-      }
-      
+      /* note: scontext->context_node is still valid */
+
       librdf_statement_clear(&scontext->current);
 
       v=(librdf_hash_datum*)librdf_iterator_get_value(scontext->iterator);
-      
+
       /* decode value content and optional context */
-      if(!librdf_statement_decode_parts(&scontext->current, cnp,
+      if(!librdf_statement_decode_parts(&scontext->current, NULL,
                                         (unsigned char*)v->data, v->size)) {
         return NULL;
       }
--- misc/redland-1.0.7/librdf/rdf_storage_list.c	Thu Dec 20 22:39:42 2007
+++ misc/build/redland-1.0.7/librdf/rdf_storage_list.c	Mon Jun 16 15:55:51 2008
@@ -459,6 +459,64 @@
 }
 
 
+/* return -1 on failure, 1 if context contains stmt, 0 if not */
+static int
+librdf_storage_list_context_contains_statement(librdf_storage* storage,
+    librdf_node* context_node,
+    librdf_statement* statement)
+{
+  librdf_storage_list_context* context=(librdf_storage_list_context*)storage->context;
+  librdf_hash_datum key, value; /* on stack - not allocated */
+  size_t size;
+  int status;
+
+  if(!context->index_contexts) {
+    librdf_log(storage->world, 0, LIBRDF_LOG_WARN, LIBRDF_FROM_STORAGE, NULL,
+               "Storage was created without context support");
+    return -1;
+  }
+
+  /* ENCODE KEY */
+  size=librdf_node_encode(context_node, NULL, 0);
+  if (!size)
+    return -1;
+  key.data=(char*)LIBRDF_MALLOC(cstring, size);
+  if (!key.data)
+    return -1;
+  key.size=librdf_node_encode(context_node,
+                               (unsigned char*)key.data, size);
+  if (!key.size) {
+    LIBRDF_FREE(data, key.data);
+    return -1;
+  }
+
+  /* ENCODE VALUE */
+  size=librdf_statement_encode(statement, NULL, 0);
+  if (!size) {
+    LIBRDF_FREE(data, key.data);
+    return -1;
+  }
+  value.data=(char*)LIBRDF_MALLOC(cstring, size);
+  if (!value.data) {
+    LIBRDF_FREE(data, key.data);
+    return -1;
+  }
+  value.size=librdf_statement_encode(statement, (unsigned char*)value.data, size);
+  if (!value.size) {
+    LIBRDF_FREE(data, value.data);
+    LIBRDF_FREE(data, key.data);
+    return -1;
+  }
+
+  status=librdf_hash_exists(context->contexts, &key, &value);
+  LIBRDF_FREE(data, value.data);
+  LIBRDF_FREE(data, key.data);
+
+  /* DO NOT free statement, ownership was not passed in */
+  return status;
+}
+
+
 /**
  * librdf_storage_list_context_add_statement:
  * @storage: #librdf_storage object
@@ -485,7 +543,15 @@
                "Storage was created without context support");
     return 1;
   }
-  
+
+  /* Do not add duplicate statements */
+  status=librdf_storage_list_context_contains_statement(storage, context_node, statement);
+  if(status)
+    if(status < 0)
+      return 1;
+    else
+      return 0;
+
   /* Store statement + node in the storage_list */
   sln=(librdf_storage_list_node*)LIBRDF_MALLOC(librdf_storage_list_node, sizeof(librdf_storage_list_node));
   if(!sln)
--- misc/redland-1.0.7/librdf/rdf_stream.c	Mon Dec 24 00:23:10 2007
+++ misc/build/redland-1.0.7/librdf/rdf_stream.c	Mon Jun 16 15:55:52 2008
@@ -126,6 +126,9 @@
 void
 librdf_free_stream(librdf_stream* stream) 
 {
+  if(!stream)
+    return;
+
   if(stream->finished_method)
     stream->finished_method(stream->context);
 
--- misc/redland-1.0.7/librdf/rdf_uri.c	Tue Oct 23 16:55:06 2007
+++ misc/build/redland-1.0.7/librdf/rdf_uri.c	Mon Jun 16 15:55:52 2008
@@ -409,7 +409,8 @@
   librdf_world *world;
 #endif
 
-  LIBRDF_ASSERT_OBJECT_POINTER_RETURN(uri, librdf_uri);
+  if(!uri)
+    return;
 
 #ifdef WITH_THREADS
   world = uri->world;
--- misc/redland-1.0.7/librdf/win32_rdf_config.h	Sun May  6 19:14:36 2007
+++ misc/build/redland-1.0.7/librdf/win32_rdf_config.h	Sat Jul 12 08:56:20 2008
@@ -45,7 +45,8 @@
 #define HAVE_STRICMP 1
 
 /* MS names for these functions */
-#define vsnprintf _vsnprintf
+// next line breaks build on wntmsci12
+//#define vsnprintf _vsnprintf
 #define snprintf _snprintf
 #define access _access
 #define stricmp _stricmp
@@ -74,40 +75,40 @@
  */
 
 /* BDB has close method with 2 args */
-#define HAVE_BDB_CLOSE_2_ARGS 1
+// #define HAVE_BDB_CLOSE_2_ARGS 1
 
 /* BDB defines DBC */
-#define HAVE_BDB_CURSOR 1
+// #define HAVE_BDB_CURSOR 1
 
 /* BDB cursor method has 4 arguments */
-#define HAVE_BDB_CURSOR_4_ARGS 1
+// #define HAVE_BDB_CURSOR_4_ARGS 1
 
 /* BDB defines DB_TXN */
-#define HAVE_BDB_DB_TXN 1
+// #define HAVE_BDB_DB_TXN 1
 
 /* BDB has fd method with 2 args */
-#define HAVE_BDB_FD_2_ARGS 1
+// #define HAVE_BDB_FD_2_ARGS 1
 
 /* Have BDB hash support */
-#define HAVE_BDB_HASH 1
+// #define HAVE_BDB_HASH 1
 
 /* BDB has open method with 6 args */
 /* #undef HAVE_BDB_OPEN_6_ARGS */
 
 /* BDB has open method with 7 args */
-#define HAVE_BDB_OPEN_7_ARGS 1
+// #define HAVE_BDB_OPEN_7_ARGS 1
 
 /* BDB has set_flags method */
-#define HAVE_BDB_SET_FLAGS 1
+// #define HAVE_BDB_SET_FLAGS 1
 
 /* BDB has dbopen method */
 /* #undef HAVE_DBOPEN */
 
 /* BDB has db_create method */
-#define HAVE_DB_CREATE 1
+// #define HAVE_DB_CREATE 1
 
 /* Define to 1 if you have the <db.h> header file. */
-#define HAVE_DB_H 1
+// #define HAVE_DB_H 1
 
 /* Define to 1 if you have the <dlfcn.h> header file. */
 /* undef HAVE_DLFCN_H */
@@ -143,13 +144,13 @@
 /* #undef HAVE_LIBWWW */
 
 /* Have local MD5 digest */
-#define HAVE_LOCAL_MD5_DIGEST 1
+// #define HAVE_LOCAL_MD5_DIGEST 1
 
 /* Have local RIPEMD160 digest */
 /* #undef HAVE_LOCAL_RIPEMD160_DIGEST */
 
 /* Have local SHA1 digest */
-#define HAVE_LOCAL_SHA1_DIGEST 1
+// #define HAVE_LOCAL_SHA1_DIGEST 1
 
 /* Define to 1 if you have the <memory.h> header file. */
 #define HAVE_MEMORY_H 1
@@ -161,25 +162,33 @@
 #define HAVE_MKTEMP 1
 
 /* MySQL libraries are present */
-#define HAVE_MYSQL 1
+// #define HAVE_MYSQL 1
 
 /* Define to 1 if you have the <openssl/crypto.h> header file. */
 /* #undef HAVE_OPENSSL_CRYPTO_H */
+#define HAVE_OPENSSL_CRYPTO_H 1
 
 /* Have openssl MD5 digest */
 /* #undef HAVE_OPENSSL_CRYPTO_MD5_DIGEST */
+#define HAVE_OPENSSL_CRYPTO_MD5_DIGEST 1
 
 /* Have openssl RIPEMD160 digest */
 /* #undef HAVE_OPENSSL_CRYPTO_RIPEMD160_DIGEST */
+#define HAVE_OPENSSL_CRYPTO_RIPEMD160_DIGEST 1
 
 /* Have openssl SHA1 digest */
 /* #undef HAVE_OPENSSL_CRYPTO_SHA1_DIGEST */
+#define HAVE_OPENSSL_CRYPTO_SHA1_DIGEST 1
 
 /* Have openssl digests */
 /* #undef HAVE_OPENSSL_DIGESTS */
+#define HAVE_OPENSSL_DIGESTS 1
 
 /* Define to 1 if you have the <pthread.h> header file. */
 /* #undef HAVE_PTHREAD_H */
+#ifdef __MINGW32__
+#undef HAVE_PTHREAD_H */
+#endif
 
 /* Define to 1 if you have the <stdint.h> header file. */
 #define HAVE_STDINT_H 1
@@ -248,7 +257,7 @@
 #define SIZEOF_UNSIGNED_LONG_LONG 8
 
 /* SQLite API version */
-#define SQLITE_API 3
+// #define SQLITE_API 3
 
 /* Define to 1 if you have the ANSI C header files. */
 #define STDC_HEADERS 1
@@ -256,14 +265,17 @@
 /* Building file storage */
 #define STORAGE_FILE 1
 
+#define STORAGE_HASHES 1
+#define STORAGE_MEMORY 1
+
 /* Building MySQL storage */
-#define STORAGE_MYSQL 1
+// #define STORAGE_MYSQL 1
 
 /* Building PostgreSQL storage */
 /*#undef STORAGE_POSTGRESQL*/
 
 /* Building SQLite storage */
-#define STORAGE_SQLITE 1
+// #define STORAGE_SQLITE 1
 
 /* Building 3store storage */
 /*#undef STORAGE_TSTORE*/
--- misc/redland-1.0.7/raptor/LICENSE.txt	Fri Mar 23 06:28:24 2007
+++ misc/build/redland-1.0.7/raptor/LICENSE.txt	Mon Jun 16 15:55:52 2008
@@ -61,3 +61,15 @@
 
    Copyright (C) 2000-2007 David Beckett
    Copyright (C) 2000-2005 University of Bristol
+
+
+LGPL Disclaimer
+
+For the avoidance of doubt, except that if any license choice other 
+than GPL or LGPL is available it will apply instead, Sun elects to 
+use only the Lesser General Public License version 2.1 (LGPLv2) at 
+this time for any software where a choice of LGPL license versions 
+is made available with the language indicating that LGPLv2.1 or any 
+later version may be used, or where a choice of which version of the 
+LGPL is applied is otherwise unspecified.
+
--- misc/redland-1.0.7/rasqal/LICENSE.txt	Sun Apr 22 23:09:08 2007
+++ misc/build/redland-1.0.7/rasqal/LICENSE.txt	Mon Jun 16 15:55:52 2008
@@ -61,3 +61,15 @@
 
    Copyright (C) 2003-2007 Dave Beckett
    Copyright (C) 2003-2005 University of Bristol
+
+
+LGPL Disclaimer
+
+For the avoidance of doubt, except that if any license choice other 
+than GPL or LGPL is available it will apply instead, Sun elects to 
+use only the Lesser General Public License version 2.1 (LGPLv2) at 
+this time for any software where a choice of LGPL license versions 
+is made available with the language indicating that LGPLv2.1 or any 
+later version may be used, or where a choice of which version of the 
+LGPL is applied is otherwise unspecified.
+
--- misc/redland-1.0.7/ltmain.sh	2007-11-28 06:23:09.000000000 +0900
+++ misc/build/redland-1.0.7/ltmain.sh	2008-07-06 15:44:48.725250000 +0900
@@ -1557,6 +1557,11 @@
 	[\\/]* | [A-Za-z]:[\\/]*) ;;
 	*)
 	  absdir=`cd "$dir" && pwd`
+	  case $host_os in
+	    mingw*)
+	      absdir=`cygpath -m $absdir`
+	      ;;
+	    esac
 	  if test -z "$absdir"; then
 	    $echo "$modename: cannot determine absolute directory name of \`$dir'" 1>&2
 	    absdir="$dir"
@@ -3237,9 +3242,9 @@
 	    revision="$number_revision"
 	    ;;
 	  freebsd-aout|freebsd-elf|sunos)
-	    current="$number_major"
-	    revision="$number_minor"
-	    age="0"
+	    current=`expr $number_major + $number_minor`
+	    age="$number_minor"
+	    revision="$number_revision"
 	    ;;
 	  irix|nonstopux)
 	    current=`expr $number_major + $number_minor`
@@ -3319,8 +3324,8 @@
 	  ;;
 
 	freebsd-elf)
-	  major=".$current"
-	  versuffix=".$current";
+	  major=.`expr $current - $age`
+	  versuffix="$major.$age.$revision"
 	  ;;
 
 	irix | nonstopux)
--- misc/redland-1.0.7/configure	2007-12-17 16:58:16.000000000 +0900
+++ misc/build/redland-1.0.7/configure	2008-07-06 15:12:01.397125000 +0900
@@ -4544,7 +4544,7 @@
 
 cygwin*)
   # func_win32_libid is a shell function defined in ltmain.sh
-  lt_cv_deplibs_check_method='file_magic ^x86 archive import|^x86 DLL'
+  lt_cv_deplibs_check_method='file_magic ^x86 archive|^x86 DLL'
   lt_cv_file_magic_cmd='func_win32_libid'
   ;;
 
@@ -4553,7 +4553,7 @@
   # func_win32_libid shell function, so use a weaker test based on 'objdump',
   # unless we find 'file', for example because we are cross-compiling.
   if ( file / ) >/dev/null 2>&1; then
-    lt_cv_deplibs_check_method='file_magic ^x86 archive import|^x86 DLL'
+    lt_cv_deplibs_check_method='file_magic ^x86 archive|^x86 DLL'
     lt_cv_file_magic_cmd='func_win32_libid'
   else
     lt_cv_deplibs_check_method='file_magic file format pei*-i386(.*architecture: i386)?'
--- misc/redland-1.0.7/utils/rdfproc.c	2007-10-23 23:55:06.000000000 +0900
+++ misc/build/redland-1.0.7/utils/rdfproc.c	2008-07-06 17:44:47.615875000 +0900
@@ -30,7 +30,7 @@
 #endif
 
 #ifdef WIN32
-#include <win32_config.h>
+#include <win32_rdf_config.h>
 #endif
 
 #include <stdio.h>
--- misc/redland-1.0.7/librdf/rdf_config.h	2008-12-26 17:24:00.000000000 +0100
+++ misc/build/redland-1.0.7/librdf/rdf_config.h	2008-12-26 17:20:46.000000000 +0100
@@ -1 +1,243 @@
-dummy
+/* librdf/rdf_config.h.  Generated from rdf_config.h.in by configure.  */
+/* librdf/rdf_config.h.in.  Generated from configure.ac by autoheader.  */
+
+/* BDB has close method with 2 args */
+/* #undef HAVE_BDB_CLOSE_2_ARGS */
+
+/* BDB defines DBC */
+/* #undef HAVE_BDB_CURSOR */
+
+/* BDB cursor method has 4 arguments */
+/* #undef HAVE_BDB_CURSOR_4_ARGS */
+
+/* BDB defines DB_TXN */
+/* #undef HAVE_BDB_DB_TXN */
+
+/* BDB has fd method with 2 args */
+/* #undef HAVE_BDB_FD_2_ARGS */
+
+/* Have BDB hash support */
+/* #undef HAVE_BDB_HASH */
+
+/* BDB has open method with 6 args */
+/* #undef HAVE_BDB_OPEN_6_ARGS */
+
+/* BDB has open method with 7 args */
+/* #undef HAVE_BDB_OPEN_7_ARGS */
+
+/* BDB has set_flags method */
+/* #undef HAVE_BDB_SET_FLAGS */
+
+/* BDB has dbopen method */
+/* #undef HAVE_DBOPEN */
+
+/* BDB has db_create method */
+/* #undef HAVE_DB_CREATE */
+
+/* Define to 1 if you have the <db.h> header file. */
+/* #undef HAVE_DB_H */
+
+/* BDB has db_open method */
+/* #undef HAVE_DB_OPEN */
+
+/* Define to 1 if you have the <dlfcn.h> header file. */
+#define HAVE_DLFCN_H 1
+
+/* Define to 1 if you have the <dmalloc.h> header file. */
+/* #undef HAVE_DMALLOC_H */
+
+/* Define to 1 if you have the <errno.h> header file. */
+#define HAVE_ERRNO_H 1
+
+/* Define to 1 if you have the <fcntl.h> header file. */
+#define HAVE_FCNTL_H 1
+
+/* Define to 1 if you have the `getenv' function. */
+#define HAVE_GETENV 1
+
+/* Define to 1 if you have the `getopt' function. */
+#define HAVE_GETOPT 1
+
+/* Define to 1 if you have the <getopt.h> header file. */
+#define HAVE_GETOPT_H 1
+
+/* Define to 1 if you have the `getopt_long' function. */
+#define HAVE_GETOPT_LONG 1
+
+/* Define to 1 if you have the `gettimeofday' function. */
+#define HAVE_GETTIMEOFDAY 1
+
+/* Define to 1 if you have the <inttypes.h> header file. */
+#define HAVE_INTTYPES_H 1
+
+/* Define to 1 if you have the <libpq-fe.h> header file. */
+/* #undef HAVE_LIBPQ_FE_H */
+
+/* Have local MD5 digest */
+/* #undef HAVE_LOCAL_MD5_DIGEST */
+
+/* Have local RIPEMD160 digest */
+/* #undef HAVE_LOCAL_RIPEMD160_DIGEST */
+
+/* Have local SHA1 digest */
+/* #undef HAVE_LOCAL_SHA1_DIGEST */
+
+/* Define to 1 if you have the `memcmp' function. */
+#define HAVE_MEMCMP 1
+
+/* Define to 1 if you have the <memory.h> header file. */
+#define HAVE_MEMORY_H 1
+
+/* Define to 1 if you have the `mkstemp' function. */
+#define HAVE_MKSTEMP 1
+
+/* Define to 1 if you have the `mktemp' function. */
+#define HAVE_MKTEMP 1
+
+/* Define to 1 if you have the <openssl/crypto.h> header file. */
+#define HAVE_OPENSSL_CRYPTO_H 1
+
+/* Have openssl MD5 digest */
+#define HAVE_OPENSSL_CRYPTO_MD5_DIGEST 1
+
+/* Have openssl RIPEMD160 digest */
+#define HAVE_OPENSSL_CRYPTO_RIPEMD160_DIGEST 1
+
+/* Have openssl SHA1 digest */
+#define HAVE_OPENSSL_CRYPTO_SHA1_DIGEST 1
+
+/* Have openssl digests */
+#define HAVE_OPENSSL_DIGESTS 1
+
+/* Define to 1 if you have the <pthread.h> header file. */
+#define HAVE_PTHREAD_H 1
+
+/* Define to 1 if you have the <sqlite3.h> header file. */
+/* #undef HAVE_SQLITE3_H */
+
+/* Define to 1 if you have the <sqlite.h> header file. */
+/* #undef HAVE_SQLITE_H */
+
+/* Define to 1 if you have the <stdint.h> header file. */
+#define HAVE_STDINT_H 1
+
+/* Define to 1 if you have the <stdlib.h> header file. */
+#define HAVE_STDLIB_H 1
+
+/* Define to 1 if you have the <strings.h> header file. */
+#define HAVE_STRINGS_H 1
+
+/* Define to 1 if you have the <string.h> header file. */
+#define HAVE_STRING_H 1
+
+/* Define to 1 if you have the <sys/stat.h> header file. */
+#define HAVE_SYS_STAT_H 1
+
+/* Define to 1 if you have the <sys/time.h> header file. */
+#define HAVE_SYS_TIME_H 1
+
+/* Define to 1 if you have the <sys/types.h> header file. */
+#define HAVE_SYS_TYPES_H 1
+
+/* Define to 1 if you have the <time.h> header file. */
+#define HAVE_TIME_H 1
+
+/* Define to 1 if you have the `tmpnam' function. */
+#define HAVE_TMPNAM 1
+
+/* Define to 1 if you have the <unistd.h> header file. */
+#define HAVE_UNISTD_H 1
+
+/* Run time assertion checks. */
+#define LIBRDF_ASSERT 1
+
+/* Print run time assertion check failure messages. */
+#define LIBRDF_ASSERT_MESSAGES 1
+
+/* Release version as a decimal */
+#define LIBRDF_VERSION_DECIMAL 10007
+
+/* Major version number */
+#define LIBRDF_VERSION_MAJOR 1
+
+/* Minor version number */
+#define LIBRDF_VERSION_MINOR 0
+
+/* Release version number */
+#define LIBRDF_VERSION_RELEASE 7
+
+/* Build storage backends as modules */
+/* #undef MODULAR_LIBRDF */
+
+/* Name of package */
+#define PACKAGE "redland"
+
+/* Define to the address where bug reports for this package should be sent. */
+#define PACKAGE_BUGREPORT "http://bugs.librdf.org/"
+
+/* Define to the full name of this package. */
+#define PACKAGE_NAME "Redland RDF Application Framework"
+
+/* Define to the full name and version of this package. */
+#define PACKAGE_STRING "Redland RDF Application Framework 1.0.7"
+
+/* Define to the one symbol short name of this package. */
+#define PACKAGE_TARNAME "redland"
+
+/* Define to the version of this package. */
+#define PACKAGE_VERSION "1.0.7"
+
+/* The size of `unsigned char', as computed by sizeof. */
+#define SIZEOF_UNSIGNED_CHAR 1
+
+/* The size of `unsigned int', as computed by sizeof. */
+#define SIZEOF_UNSIGNED_INT 4
+
+/* The size of `unsigned long', as computed by sizeof. */
+#define SIZEOF_UNSIGNED_LONG 4
+
+/* The size of `unsigned long long', as computed by sizeof. */
+#define SIZEOF_UNSIGNED_LONG_LONG 8
+
+/* SQLite API version */
+/* #undef SQLITE_API */
+
+/* Define to 1 if you have the ANSI C header files. */
+#define STDC_HEADERS 1
+
+/* Building file storage */
+#define STORAGE_FILE 1
+
+/* Building hashes storage */
+#define STORAGE_HASHES 1
+
+/* Building memory storage */
+#define STORAGE_MEMORY 1
+
+/* Building MySQL storage */
+/* #undef STORAGE_MYSQL */
+
+/* Building PostgreSQL storage */
+/* #undef STORAGE_POSTGRESQL */
+
+/* Building SQLite storage */
+/* #undef STORAGE_SQLITE */
+
+/* Building 3store storage */
+/* #undef STORAGE_TSTORE */
+
+/* Define to 1 if you can safely include both <sys/time.h> and <time.h>. */
+#define TIME_WITH_SYS_TIME 1
+
+/* Version number of package */
+#define VERSION "1.0.7"
+
+/* Use POSIX threads */
+#define WITH_THREADS 1
+
+/* Define to 1 if your processor stores words with the most significant byte
+   first (like Motorola and SPARC, unlike Intel and VAX). */
+/* #undef WORDS_BIGENDIAN */
+
+/* Define to empty if `const' does not conform to ANSI C. */
+/* #undef const */
