--- misc/libwps-0.2.1/src/lib/WPS8.cpp	2011-04-05 11:25:15.000000000 +0200
+++ misc/build/libwps-0.2.1/src/lib/WPS8.cpp	2011-05-03 15:02:21.107349347 +0200
@@ -136,7 +136,7 @@
 	input->seek(pos->second.offset, WPX_SEEK_SET);
 	n_streams = readU32(input);
 
-	if (n_streams > 100) WPS_DEBUG_MSG(("Probably garbled STRS: count = %u\n",n_streams));
+	if (n_streams > 100) { WPS_DEBUG_MSG(("Probably garbled STRS: count = %u\n",n_streams)); }
 
 	/* skip mysterious header*/
 	input->seek(8, WPX_SEEK_CUR);
@@ -155,7 +155,7 @@
 		last_pos += offset;
 	}
 	offset = readU32(input);
-	if (offset) WPS_DEBUG_MSG(("Offset table is not 0-terminated!\n"));
+	if (offset) { WPS_DEBUG_MSG(("Offset table is not 0-terminated!\n")); }
 
 	for (unsigned i=0; i < n_streams; i++) {
 		uint16_t len;
@@ -325,7 +325,7 @@
  *
  */
 
-void WPS8Parser::readText(WPXInputStream * input, WPS8ContentListener *listener)
+void WPS8Parser::readText(WPXInputStream * /* input */, WPS8ContentListener * /* listener */)
 {
 #if (0)
 	WPS_DEBUG_MSG(("WPS8Parser::readText()\n"));
@@ -1356,7 +1356,7 @@
 							id += 4;
 							t_rem -= 4;
 
-							if (t_count < 0 && t_count > 20) break; /* obviously wrong */
+							if (t_count > 20) break; /* obviously wrong */
 						} else break; /* wrong format */
 					}
 
--- misc/libwps-0.2.1/src/lib/WPSContentListener.cpp	2011-04-04 21:56:29.000000000 +0200
+++ misc/build/libwps-0.2.1/src/lib/WPSContentListener.cpp	2011-05-03 15:02:21.837414573 +0200
@@ -621,7 +621,7 @@
 		_closeParagraph();
 }
 
-const uint16_t WPSContentListener::getSpec() const
+uint16_t WPSContentListener::getSpec() const
 {
 	return m_ps->m_spec;
 }
--- misc/libwps-0.2.1/src/lib/WPSContentListener.h	2011-04-04 21:30:56.000000000 +0200
+++ misc/build/libwps-0.2.1/src/lib/WPSContentListener.h	2011-05-03 15:02:23.334548336 +0200
@@ -154,7 +154,7 @@
 
 	void insertEOL();
 
-	const uint16_t getSpec() const;
+	uint16_t getSpec() const;
 protected:
 	WPSContentListener(std::list<WPSPageSpan> &pageList, WPXDocumentInterface *documentInterface);
 	virtual ~WPSContentListener();
